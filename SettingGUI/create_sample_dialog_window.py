# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'create_sample.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtWidgets
from PyQt5.QtWidgets import QDialog
from Threads.Params_Thread import ParamsThread
from Threads.Disc_Thread import DiscThread
from config import Device_Configuration#motor_speed_base, motor_speed_blade, base_diameter


class Ui_Sample_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(845, 620)
        Dialog.setMinimumSize(QtCore.QSize(800, 600))
        self.verticalLayout = QtWidgets.QVBoxLayout(Dialog)
        self.verticalLayout.setObjectName("verticalLayout")
        self.groupBox = QtWidgets.QGroupBox(Dialog)
        self.groupBox.setObjectName("groupBox")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.groupBox)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout()
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.label = QtWidgets.QLabel(self.groupBox)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.verticalLayout_3.addWidget(self.label)
        self.lineEdit = QtWidgets.QLineEdit(self.groupBox)
        self.lineEdit.setObjectName("lineEdit")
        self.verticalLayout_3.addWidget(self.lineEdit)
        self.verticalLayout_4.addLayout(self.verticalLayout_3)
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.label_2 = QtWidgets.QLabel(self.groupBox)
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.verticalLayout_2.addWidget(self.label_2)
        self.lineEdit_2 = QtWidgets.QLineEdit(self.groupBox)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.verticalLayout_2.addWidget(self.lineEdit_2)
        self.verticalLayout_4.addLayout(self.verticalLayout_2)
        self.groupBox_3 = QtWidgets.QGroupBox(self.groupBox)
        self.groupBox_3.setObjectName("groupBox_3")
        self.verticalLayout_24 = QtWidgets.QVBoxLayout(self.groupBox_3)
        self.verticalLayout_24.setObjectName("verticalLayout_24")
        self.comboBox_paramID_3 = QtWidgets.QComboBox(self.groupBox_3)
        self.comboBox_paramID_3.setObjectName("comboBox_paramID_3")
        self.verticalLayout_24.addWidget(self.comboBox_paramID_3)
        self.groupBox_5 = QtWidgets.QGroupBox(self.groupBox_3)
        self.groupBox_5.setEnabled(True)
        self.groupBox_5.setTitle("")
        self.groupBox_5.setObjectName("groupBox_5")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.groupBox_5)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.verticalLayout_25 = QtWidgets.QVBoxLayout()
        self.verticalLayout_25.setContentsMargins(-1, 10, -1, 10)
        self.verticalLayout_25.setObjectName("verticalLayout_25")
        self.verticalLayout_26 = QtWidgets.QVBoxLayout()
        self.verticalLayout_26.setObjectName("verticalLayout_26")
        self.label_disc_diameter_3 = QtWidgets.QLabel(self.groupBox_5)
        self.label_disc_diameter_3.setAlignment(QtCore.Qt.AlignCenter)
        self.label_disc_diameter_3.setObjectName("label_disc_diameter_3")
        self.verticalLayout_26.addWidget(self.label_disc_diameter_3)
        self.lineEdit_disc_diameter_3 = QtWidgets.QLineEdit(self.groupBox_5)
        self.lineEdit_disc_diameter_3.setObjectName("lineEdit_disc_diameter_3")
        self.verticalLayout_26.addWidget(self.lineEdit_disc_diameter_3)
        self.verticalLayout_25.addLayout(self.verticalLayout_26)
        self.verticalLayout_27 = QtWidgets.QVBoxLayout()
        self.verticalLayout_27.setObjectName("verticalLayout_27")
        self.label_blade_distance_3 = QtWidgets.QLabel(self.groupBox_5)
        self.label_blade_distance_3.setAlignment(QtCore.Qt.AlignCenter)
        self.label_blade_distance_3.setObjectName("label_blade_distance_3")
        self.verticalLayout_27.addWidget(self.label_blade_distance_3)
        self.lineEdit_blade_distance_3 = QtWidgets.QLineEdit(self.groupBox_5)
        self.lineEdit_blade_distance_3.setObjectName("lineEdit_blade_distance_3")
        self.verticalLayout_27.addWidget(self.lineEdit_blade_distance_3)
        self.verticalLayout_25.addLayout(self.verticalLayout_27)
        self.verticalLayout_28 = QtWidgets.QVBoxLayout()
        self.verticalLayout_28.setObjectName("verticalLayout_28")
        self.label_blade_force_3 = QtWidgets.QLabel(self.groupBox_5)
        self.label_blade_force_3.setAlignment(QtCore.Qt.AlignCenter)
        self.label_blade_force_3.setObjectName("label_blade_force_3")
        self.verticalLayout_28.addWidget(self.label_blade_force_3)
        self.lineEdit_blade_force_3 = QtWidgets.QLineEdit(self.groupBox_5)
        self.lineEdit_blade_force_3.setObjectName("lineEdit_blade_force_3")
        self.verticalLayout_28.addWidget(self.lineEdit_blade_force_3)
        self.verticalLayout_25.addLayout(self.verticalLayout_28)
        self.verticalLayout_29 = QtWidgets.QVBoxLayout()
        self.verticalLayout_29.setObjectName("verticalLayout_29")
        self.label_timestamp_3 = QtWidgets.QLabel(self.groupBox_5)
        self.label_timestamp_3.setAlignment(QtCore.Qt.AlignCenter)
        self.label_timestamp_3.setObjectName("label_timestamp_3")
        self.verticalLayout_29.addWidget(self.label_timestamp_3)
        self.lineEdit_timestamp_3 = QtWidgets.QLineEdit(self.groupBox_5)
        self.lineEdit_timestamp_3.setObjectName("lineEdit_timestamp_3")
        self.lineEdit_timestamp_3.setEnabled(False)
        self.verticalLayout_29.addWidget(self.lineEdit_timestamp_3)
        self.verticalLayout_25.addLayout(self.verticalLayout_29)
        self.verticalLayout_25.setStretch(0, 10)
        self.verticalLayout_25.setStretch(1, 10)
        self.verticalLayout_25.setStretch(2, 10)
        self.verticalLayout_25.setStretch(3, 10)
        self.horizontalLayout_3.addLayout(self.verticalLayout_25)
        self.verticalLayout_30 = QtWidgets.QVBoxLayout()
        self.verticalLayout_30.setContentsMargins(-1, 10, -1, 10)
        self.verticalLayout_30.setSpacing(0)
        self.verticalLayout_30.setObjectName("verticalLayout_30")
        self.verticalLayout_31 = QtWidgets.QVBoxLayout()
        self.verticalLayout_31.setObjectName("verticalLayout_31")
        self.label_base_diameter_3 = QtWidgets.QLabel(self.groupBox_5)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_base_diameter_3.sizePolicy().hasHeightForWidth())
        self.label_base_diameter_3.setSizePolicy(sizePolicy)
        self.label_base_diameter_3.setAlignment(QtCore.Qt.AlignCenter)
        self.label_base_diameter_3.setObjectName("label_base_diameter_3")
        self.verticalLayout_31.addWidget(self.label_base_diameter_3)
        self.lineEdit_base_diameter = QtWidgets.QLineEdit(self.groupBox_5)
        self.lineEdit_base_diameter.setObjectName("lineEdit_base_diameter")
        self.lineEdit_base_diameter.setEnabled(False)
        self.verticalLayout_31.addWidget(self.lineEdit_base_diameter)
        self.verticalLayout_30.addLayout(self.verticalLayout_31)
        self.verticalLayout_32 = QtWidgets.QVBoxLayout()
        self.verticalLayout_32.setObjectName("verticalLayout_32")
        self.label_motor_speed_base_3 = QtWidgets.QLabel(self.groupBox_5)
        self.label_motor_speed_base_3.setAlignment(QtCore.Qt.AlignCenter)
        self.label_motor_speed_base_3.setObjectName("label_motor_speed_base_3")
        self.verticalLayout_32.addWidget(self.label_motor_speed_base_3)
        self.lineEdit_motor_speed_base_3 = QtWidgets.QLineEdit(self.groupBox_5)
        self.lineEdit_motor_speed_base_3.setObjectName("lineEdit_motor_speed_base_3")
        self.lineEdit_motor_speed_base_3.setEnabled(False)
        self.verticalLayout_32.addWidget(self.lineEdit_motor_speed_base_3)
        self.verticalLayout_30.addLayout(self.verticalLayout_32)
        self.verticalLayout_33 = QtWidgets.QVBoxLayout()
        self.verticalLayout_33.setObjectName("verticalLayout_33")
        self.label_motor_speed_blade_3 = QtWidgets.QLabel(self.groupBox_5)
        self.label_motor_speed_blade_3.setAlignment(QtCore.Qt.AlignCenter)
        self.label_motor_speed_blade_3.setObjectName("label_motor_speed_blade_3")
        self.verticalLayout_33.addWidget(self.label_motor_speed_blade_3)
        self.lineEdit_motor_speed_blade_3 = QtWidgets.QLineEdit(self.groupBox_5)
        self.lineEdit_motor_speed_blade_3.setObjectName("lineEdit_motor_speed_blade_3")
        self.lineEdit_motor_speed_blade_3.setEnabled(False)
        self.verticalLayout_33.addWidget(self.lineEdit_motor_speed_blade_3)
        self.label_blade_amount = QtWidgets.QLabel(self.groupBox_5)
        self.label_blade_amount.setAlignment(QtCore.Qt.AlignCenter)
        self.label_blade_amount.setObjectName("label_blade_amount")
        self.verticalLayout_33.addWidget(self.label_blade_amount)
        self.verticalLayout_30.addLayout(self.verticalLayout_33)
        self.lineEdit_blade_amount = QtWidgets.QLineEdit(self.groupBox_5)
        self.lineEdit_blade_amount.setObjectName("lineEdit_blade_amount")
        self.lineEdit_blade_amount.setEnabled(False)
        self.verticalLayout_30.addWidget(self.lineEdit_blade_amount)
        self.horizontalLayout_3.addLayout(self.verticalLayout_30)
        self.verticalLayout_5.addLayout(self.horizontalLayout_3)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.params_deletebutton = QtWidgets.QPushButton(self.groupBox_5)
        self.params_deletebutton.setEnabled(False)
        self.params_deletebutton.setObjectName("params_deletebutton")
        self.horizontalLayout_2.addWidget(self.params_deletebutton)
        self.params_createbutton = QtWidgets.QPushButton(self.groupBox_5)
        self.params_createbutton.setEnabled(False)
        self.params_createbutton.setObjectName("params_createbutton")
        self.horizontalLayout_2.addWidget(self.params_createbutton)
        self.verticalLayout_5.addLayout(self.horizontalLayout_2)
        self.verticalLayout_24.addWidget(self.groupBox_5)
        self.verticalLayout_4.addWidget(self.groupBox_3)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.sample_cancelbutton = QtWidgets.QPushButton(self.groupBox)
        self.sample_cancelbutton.setObjectName("sample_cancelbutton")
        self.horizontalLayout.addWidget(self.sample_cancelbutton)
        self.sample_createbutton = QtWidgets.QPushButton(self.groupBox)
        self.sample_createbutton.setObjectName("sample_createbutton")
        self.sample_createbutton.setEnabled(False)
        self.horizontalLayout.addWidget(self.sample_createbutton)
        self.verticalLayout_4.addLayout(self.horizontalLayout)
        self.verticalLayout.addWidget(self.groupBox)

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Создание образца и параметров"))
        self.groupBox.setTitle(_translate("Dialog", "Создание образца"))
        self.label.setText(_translate("Dialog", "Название образца"))
        self.label_2.setText(_translate("Dialog", "ID(Опционально, только цифры)"))
        self.groupBox_3.setTitle(_translate("Dialog", "Параметры режима(выбрать известные или создать новые)"))
        self.label_disc_diameter_3.setText(_translate("Dialog", "Диаметр образца"))
        self.label_blade_distance_3.setText(_translate("Dialog", "Растояние между лопатками"))
        self.label_blade_force_3.setText(_translate("Dialog", "Усилие на лопатку"))
        self.label_timestamp_3.setText(_translate("Dialog", "Временная метка"))
        self.label_base_diameter_3.setText(_translate("Dialog", "Диаметр базы"))
        self.label_motor_speed_base_3.setText(_translate("Dialog", "Скорость двигателя базы"))
        self.label_motor_speed_blade_3.setText(_translate("Dialog", "Скорость двигателя головки"))
        self.label_blade_amount.setText(_translate("Dialog", "Количество лопаток"))
        self.params_deletebutton.setText(_translate("Dialog", "Удалить параметры"))
        self.params_createbutton.setText(_translate("Dialog", "Создать параметры"))
        self.sample_cancelbutton.setText(_translate("Dialog", "отмена"))
        self.sample_createbutton.setText(_translate("Dialog", "создать образец"))


class Create_Sample_Dialog(QDialog, Ui_Sample_Dialog):
    def __init__(self):
        super().__init__()
        self.current_config = Device_Configuration()
        self.setupUi(self)
        self.download_param_list()
        self.params_createbutton.clicked.connect(self.create_new_param)
        self.params_deletebutton.clicked.connect(self.delete_param)
        self.lineEdit.textChanged.connect(self.create_sample_opportunity)

        # self.lineEdit_2.textChanged.connect(self.create_sample_opportunity)
        self.sample_createbutton.clicked.connect(self.create_sample)
        self.sample_cancelbutton.clicked.connect(self.reject)

        # значения параметров установки подтягиваются из конфига и не меняются
        self.lineEdit_base_diameter.setText(str(self.current_config.base_diameter))
        self.lineEdit_motor_speed_base_3.setText(str(self.current_config.motor_speed_base))
        self.lineEdit_motor_speed_blade_3.setText(str(self.current_config.motor_speed_head))

    def download_param_list(self):
        self.comboBox_paramID_3.currentIndexChanged.connect(self.handle_combobox)
        self.DownloadParamListThread = ParamsThread('GetParamList')
        self.DownloadParamListThread.update_signal.connect(self.update_items_in_combobox)
        self.DownloadParamListThread.start()

    def handle_combobox(self):
        selected_text = self.comboBox_paramID_3.currentText().strip()
        if selected_text.isdigit():
            self.download_current_param(int(selected_text))
        else:
            self.fill_new_param()

    def download_current_param(self, id):
        self.DownloadParamThread = ParamsThread('GetParam', id)
        self.DownloadParamThread.update_signal.connect(self.show_params_if_exist)
        self.DownloadParamThread.start()

    def show_params_if_exist(self, param):
        if param is not None:
            self.lines_state(False)
            self.lineEdit_timestamp_3.setDisabled(True)
            self.params_deletebutton.setEnabled(True)
            self.lineEdit_disc_diameter_3.setText(str(param[0]))
            self.lineEdit_blade_distance_3.setText(str(param[1]))
            self.lineEdit_blade_force_3.setText(str(param[2]))
            self.lineEdit_timestamp_3.setText(str(param[3]))

    def update_items_in_combobox(self, paramlist):
        if paramlist is not None:
            self.comboBox_paramID_3.clear()
            self.comboBox_paramID_3.addItems(map(str, paramlist))
            self.comboBox_paramID_3.addItem('create new param')
        else:
            self.comboBox_paramID_3.clear()
            self.comboBox_paramID_3.addItem('create new param')

    def fill_new_param(self):
        self.comboBox_paramID_3.currentIndexChanged.disconnect(self.handle_combobox)
        self.lineEdit.textChanged.disconnect(self.create_sample_opportunity)
        self.comboBox_paramID_3.currentIndexChanged.connect(self.cancel_creating)

        self.params_deletebutton.setEnabled(False)
        self.params_createbutton.setEnabled(True)

        # self.params_createbutton.setEnabled(True)
        self.clear_fields()
        self.lines_state(True)

        self.lineEdit_timestamp_3.setText("Создается автоматически")

    def cancel_creating(self):
        self.comboBox_paramID_3.currentIndexChanged.disconnect(self.cancel_creating)
        self.lineEdit.textChanged.connect(self.create_sample_opportunity)
        self.comboBox_paramID_3.clear()
        self.params_deletebutton.setEnabled(True)
        self.params_createbutton.setEnabled(False)
        self.download_param_list()

    def create_new_param(self):
        try:
            disc_diameter = float(self.lineEdit_disc_diameter_3.text().strip())
            blade_distance = float(self.lineEdit_blade_distance_3.text().strip())
            blade_force = float(self.lineEdit_blade_force_3.text().strip())

            # Вызов метода создания нового параметра
            self.CreateNewParamThread = ParamsThread('CreateNewParam', disc_diameter, blade_distance, blade_force)
            self.CreateNewParamThread.update_signal.connect(self.show_creating_status)
            self.CreateNewParamThread.start()
        except ValueError:
            print("Please enter valid numbers in all fields.")
            self.clear_fields()

    def clear_fields(self):
        self.lineEdit_disc_diameter_3.clear()
        self.lineEdit_blade_distance_3.clear()
        self.lineEdit_blade_force_3.clear()

    def lines_state(self, state):
        self.lineEdit_disc_diameter_3.setEnabled(state)
        self.lineEdit_blade_distance_3.setEnabled(state)
        self.lineEdit_blade_force_3.setEnabled(state)

    def show_creating_status(self, answer):
        if answer:
            self.cancel_creating()
        else:
            self.fill_new_param()

    def delete_param(self):
        selected_text = self.comboBox_paramID_3.currentText().strip()
        if selected_text.isdigit():
            self.DeletingThread = ParamsThread('DeleteParam', selected_text)
            self.DeletingThread.start()

            self.comboBox_paramID_3.currentIndexChanged.disconnect(self.handle_combobox)
            self.comboBox_paramID_3.clear()

            self.download_param_list()

        else:
            self.fill_new_param()

    def create_sample_opportunity(self):
        selected_text_param = self.comboBox_paramID_3.currentText().strip()
        selected_text_sample_id = self.lineEdit_2.text().strip()
        if selected_text_param.isdigit() and self.lineEdit.text():
            self.sample_createbutton.setEnabled(True)

        else:
            self.sample_createbutton.setEnabled(False)

    def create_sample(self):
        try:
            disc_id = int(self.lineEdit_2.text().strip())
            disc_name = self.lineEdit.text().strip()
            param_id = int(self.comboBox_paramID_3.currentText().strip())
            self.CreateNewDiscThread = DiscThread('CreateNewDiscWithID', disc_id, disc_name, param_id)
            self.CreateNewDiscThread.update_signal.connect(self.is_sample_created)
            self.CreateNewDiscThread.start()

        except:
            disc_name = self.lineEdit.text().strip()
            param_id = int(self.comboBox_paramID_3.currentText().strip())
            self.CreateNewDiscThread = DiscThread('CreateNewDiscWithName', disc_name, param_id)
            self.CreateNewDiscThread.update_signal.connect(self.is_sample_created)
            self.CreateNewDiscThread.start()

    def is_sample_created(self, response):
        if response:
            print('Succes')
            self.accept()

        else:
            print("Try again")

